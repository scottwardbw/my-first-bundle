{"remainingRequest":"/Users/scott.ward/.npm/_npx/14187/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/scott.ward/Documents/GitHub/my-first-bundle/node_modules/@vizia/transformify/index.js","dependencies":[{"path":"/Users/scott.ward/Documents/GitHub/my-first-bundle/node_modules/@vizia/transformify/index.js","mtime":499162500000},{"path":"/Users/scott.ward/.npm/_npx/14187/lib/node_modules/@vizia/app-emulator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/scott.ward/.npm/_npx/14187/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKZnVuY3Rpb24gc2VyaWFsUHVzaChjb2xsZWN0aW9uLCBwdXNoKSB7CiAgcmV0dXJuIGNvbGxlY3Rpb24ucmVkdWNlKChtZW1vLCBpdGVtKSA9PiB7CiAgICByZXR1cm4gbWVtby50aGVuKGNoYWluUmVzdWx0cyA9PiB7CiAgICAgIHJldHVybiBpdGVtLnRoZW4ocmVzb2x2ZWRJdGVtID0+IHsKICAgICAgICBwdXNoKHJlc29sdmVkSXRlbSk7CiAgICAgICAgcmV0dXJuIFsuLi5jaGFpblJlc3VsdHMsIGl0ZW1dOwogICAgICB9KTsKICAgIH0pOwogIH0sIFByb21pc2UucmVzb2x2ZShbXSkpOwp9CgpmdW5jdGlvbiB0cmFuc2Zvcm1pZnkoZm4sIHNwbGl0KSB7CiAgcmV0dXJuIHsKICAgIHRyYW5zZm9ybShkYXRhLCBwaXBlbGluZSkgewogICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCkudGhlbigoKSA9PiB7CiAgICAgICAgY29uc3Qgc2hvdWxkU3BsaXQgPSBzcGxpdCAmJiBBcnJheS5pc0FycmF5KGRhdGEpOwogICAgICAgIGNvbnN0IHJlc3VsdCA9IHNob3VsZFNwbGl0ID8gZGF0YS5tYXAoaXRlbSA9PiBmbihpdGVtLCBwaXBlbGluZS5jb25maWcpKSA6IGZuKGRhdGEsIHBpcGVsaW5lLmNvbmZpZyk7CgogICAgICAgIGlmIChzaG91bGRTcGxpdCAmJiByZXN1bHQubGVuZ3RoICYmIHR5cGVvZiByZXN1bHRbMF0udGhlbiA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgcmV0dXJuIHNlcmlhbFB1c2gocmVzdWx0LCBwaXBlbGluZS5wdXNoKS50aGVuKCgpID0+IHsKICAgICAgICAgICAgcGlwZWxpbmUuZG9uZSgpOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmIChzaG91bGRTcGxpdCAmJiByZXN1bHQubGVuZ3RoKSB7CiAgICAgICAgICByZXN1bHQuZm9yRWFjaChpdGVtID0+IHBpcGVsaW5lLnB1c2goaXRlbSkpOwogICAgICAgICAgcGlwZWxpbmUuZG9uZSgpOwogICAgICAgIH0gZWxzZSBpZiAocmVzdWx0ICYmIHR5cGVvZiByZXN1bHQudGhlbiA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgcmV0dXJuIHJlc3VsdC50aGVuKHJlc29sdmVkUmVzdWx0ID0+IHsKICAgICAgICAgICAgcGlwZWxpbmUucHVzaChyZXNvbHZlZFJlc3VsdCk7CiAgICAgICAgICAgIHBpcGVsaW5lLmRvbmUoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwaXBlbGluZS5wdXNoKHJlc3VsdCk7CiAgICAgICAgICBwaXBlbGluZS5kb25lKCk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgcGlwZWxpbmUuZXJyb3IoZXJyb3IpOwogICAgICB9KTsKICAgIH0KCiAgfTsKfQoKbW9kdWxlLmV4cG9ydHMgPSB0cmFuc2Zvcm1pZnk7"},{"version":3,"sources":["/Users/scott.ward/Documents/GitHub/my-first-bundle/node_modules/@vizia/transformify/index.js"],"names":["serialPush","collection","push","reduce","memo","item","then","chainResults","resolvedItem","Promise","resolve","transformify","fn","split","transform","data","pipeline","shouldSplit","Array","isArray","result","map","config","length","done","forEach","resolvedResult","catch","error","module","exports"],"mappings":"AAAA;;AAEA,SAASA,UAAT,CAAoBC,UAApB,EAAgCC,IAAhC,EAAsC;AAClC,SAAOD,UAAU,CAACE,MAAX,CAAkB,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrC,WAAOD,IAAI,CAACE,IAAL,CAAWC,YAAD,IAAkB;AAC/B,aAAOF,IAAI,CACNC,IADE,CACIE,YAAD,IAAkB;AACpBN,QAAAA,IAAI,CAACM,YAAD,CAAJ;AACA,eAAO,CAAC,GAAGD,YAAJ,EAAkBF,IAAlB,CAAP;AACH,OAJE,CAAP;AAKH,KANM,CAAP;AAOH,GARM,EAQJI,OAAO,CAACC,OAAR,CAAgB,EAAhB,CARI,CAAP;AASH;;AAED,SAASC,YAAT,CAAsBC,EAAtB,EAA0BC,KAA1B,EAAiC;AAC7B,SAAO;AACHC,IAAAA,SAAS,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACtB,aAAOP,OAAO,CAACC,OAAR,GACFJ,IADE,CACG,MAAM;AACR,cAAMW,WAAW,GAAGJ,KAAK,IAAIK,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAA7B;AACA,cAAMK,MAAM,GAAGH,WAAW,GAAGF,IAAI,CAACM,GAAL,CAAUhB,IAAD,IAAUO,EAAE,CAACP,IAAD,EAAOW,QAAQ,CAACM,MAAhB,CAArB,CAAH,GAAmDV,EAAE,CAACG,IAAD,EAAOC,QAAQ,CAACM,MAAhB,CAA/E;;AAEA,YAAIL,WAAW,IAAIG,MAAM,CAACG,MAAtB,IAAgC,OAAOH,MAAM,CAAC,CAAD,CAAN,CAAUd,IAAjB,KAA0B,UAA9D,EAA0E;AACtE,iBAAON,UAAU,CAACoB,MAAD,EAASJ,QAAQ,CAACd,IAAlB,CAAV,CACFI,IADE,CACG,MAAM;AACRU,YAAAA,QAAQ,CAACQ,IAAT;AACH,WAHE,CAAP;AAIH,SALD,MAKO,IAAIP,WAAW,IAAIG,MAAM,CAACG,MAA1B,EAAkC;AACrCH,UAAAA,MAAM,CAACK,OAAP,CAAgBpB,IAAD,IAAUW,QAAQ,CAACd,IAAT,CAAcG,IAAd,CAAzB;AACAW,UAAAA,QAAQ,CAACQ,IAAT;AACH,SAHM,MAGA,IAAIJ,MAAM,IAAI,OAAOA,MAAM,CAACd,IAAd,KAAuB,UAArC,EAAiD;AACpD,iBAAOc,MAAM,CACRd,IADE,CACIoB,cAAD,IAAoB;AACtBV,YAAAA,QAAQ,CAACd,IAAT,CAAcwB,cAAd;AACAV,YAAAA,QAAQ,CAACQ,IAAT;AACH,WAJE,CAAP;AAKH,SANM,MAMA;AACHR,UAAAA,QAAQ,CAACd,IAAT,CAAckB,MAAd;AACAJ,UAAAA,QAAQ,CAACQ,IAAT;AACH;AACJ,OAvBE,EAwBFG,KAxBE,CAwBKC,KAAD,IAAW;AACdZ,QAAAA,QAAQ,CAACY,KAAT,CAAeA,KAAf;AACH,OA1BE,CAAP;AA2BH;;AA7BE,GAAP;AA+BH;;AAEDC,MAAM,CAACC,OAAP,GAAiBnB,YAAjB","sourcesContent":["'use strict';\n\nfunction serialPush(collection, push) {\n    return collection.reduce((memo, item) => {\n        return memo.then((chainResults) => {\n            return item\n                .then((resolvedItem) => {\n                    push(resolvedItem);\n                    return [...chainResults, item];\n                });\n        });\n    }, Promise.resolve([]));\n}\n\nfunction transformify(fn, split) {\n    return {\n        transform(data, pipeline) {\n            return Promise.resolve()\n                .then(() => {\n                    const shouldSplit = split && Array.isArray(data);\n                    const result = shouldSplit ? data.map((item) => fn(item, pipeline.config)) : fn(data, pipeline.config);\n\n                    if (shouldSplit && result.length && typeof result[0].then === 'function') {\n                        return serialPush(result, pipeline.push)\n                            .then(() => {\n                                pipeline.done();\n                            });\n                    } else if (shouldSplit && result.length) {\n                        result.forEach((item) => pipeline.push(item));\n                        pipeline.done();\n                    } else if (result && typeof result.then === 'function') {\n                        return result\n                            .then((resolvedResult) => {\n                                pipeline.push(resolvedResult);\n                                pipeline.done();\n                            });\n                    } else {\n                        pipeline.push(result);\n                        pipeline.done();\n                    }\n                })\n                .catch((error) => {\n                    pipeline.error(error);\n                });\n        }\n    };\n}\n\nmodule.exports = transformify;\n"]}]}