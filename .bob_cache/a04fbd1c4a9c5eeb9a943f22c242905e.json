{"remainingRequest":"/Users/scott.ward/.npm/_npx/29758/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/scott.ward/Documents/GitHub/my-first-bundle/src/lib/create-source.js","dependencies":[{"path":"/Users/scott.ward/Documents/GitHub/my-first-bundle/src/lib/create-source.js","mtime":1630407133169},{"path":"/Users/scott.ward/.npm/_npx/29758/lib/node_modules/@vizia/app-emulator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/scott.ward/.npm/_npx/29758/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKY29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpOwovKioKICogeW91IGNhbiBwYXNzIGFuIG9wdGlvbnMgb2JqZWN0IGludG8geW91ciBzb3VyY2Ugd2hlbiBpbnN0YW50aWF0aW5nIHRoZSBmYWN0b3J5CiAqIHRoZXNlIGNhbiB0aGVuIGJlIHVzZWQgaW4geW91ciBjb2RlIGJ5IGFjY2VzcyBgb3B0aW9ucy5wcm9wTmFtZWAKICovCgoKbW9kdWxlLmV4cG9ydHMgPSAob3B0aW9ucyA9IHt9KSA9PiB7CiAgcmV0dXJuIHsKICAgIHNvdXJjZShwaXBlbGluZSkgewogICAgICAvL3NvdXJjZSBmYWN0b3JpZXMgbXVzdCByZXR1cm4gYW4gb2JqZWN0IHdpdGggYSBmdW5jdGlvbiBjYWxsZWQgJ3NvdXJjZScKICAgICAgY29uc3QgcHJvcHMgPSBwaXBlbGluZS5jb25maWcuc2NlbmUub3B0aW9ucywKICAgICAgICAgICAgLy9nZXQgY29udHJvbCBwcm9wZXJ0aWVzCiAgICAgIHsKICAgICAgICBjaGFsbGVuZ2VSYXRpbmcKICAgICAgfSA9IHByb3BzOyAvLyBnZXQgdGhlIHZhbHVlcyB5b3UgbmVlZCBmcm9tIGNvbnRyb2wgcHJvcHMKCiAgICAgIGxldCB1cmwgPSBgaHR0cHM6Ly93d3cuZG5kNWVhcGkuY28vYXBpL21vbnN0ZXJzYDsKCiAgICAgIGlmIChjaGFsbGVuZ2VSYXRpbmcgPiAwKSB7CiAgICAgICAgdXJsID0gYCR7dXJsfT9jaGFsbGVuZ2VfcmF0aW5nPSR7Y2hhbGxlbmdlUmF0aW5nfWA7CiAgICAgIH0gLy9wdWxsIHlvdXIgc291cmNlIGRhdGEgZnJvbSBhIFVSTAoKCiAgICAgIGF4aW9zKHVybCkudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5kYXRhKSAvL2dldCB0aGUganNvbiBkYXRhIGZyb20gdGhlIGFwaSBlbmRwb2ludAogICAgICAudGhlbihqc29uRGF0YSA9PiB7CiAgICAgICAgaWYgKGpzb25EYXRhLkluZm9ybWF0aW9uKSB7CiAgICAgICAgICByZXR1cm4gcGlwZWxpbmUuZXJyb3IoanNvbkRhdGEuSW5mb3JtYXRpb24pOwogICAgICAgIH0KCiAgICAgICAgcGlwZWxpbmUucHVzaChqc29uRGF0YS5yZXN1bHRzKTsgLy9zZW5kIHRoZSBkYXRhIGRvd24gdGhlIHBpcGVsaW5lCgogICAgICAgIHBpcGVsaW5lLmRvbmUoKTsgLy90ZWxsIHRoZSBwaXBlbGluZSB0aGF0IHlvdSBoYXZlIG5vIGZ1cnRoZXIgZGF0YSB0byBzZW5kCiAgICAgIH0pOwogICAgfQoKICB9Owp9Ow=="},{"version":3,"sources":["/Users/scott.ward/Documents/GitHub/my-first-bundle/src/lib/create-source.js"],"names":["axios","require","module","exports","options","source","pipeline","props","config","scene","challengeRating","url","then","response","data","jsonData","Information","error","push","results","done"],"mappings":"AAAA;;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,CAACC,OAAO,GAAG,EAAX,KAAkB;AAC/B,SAAO;AACHC,IAAAA,MAAM,CAACC,QAAD,EAAW;AAAE;AACf,YAAMC,KAAK,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,KAAhB,CAAsBL,OAApC;AAAA,YAA6C;AACzC;AAAEM,QAAAA;AAAF,UAAsBH,KAD1B,CADa,CAEoB;;AAEjC,UAAII,GAAG,GAAI,sCAAX;;AAEA,UAAID,eAAe,GAAG,CAAtB,EAAyB;AACrBC,QAAAA,GAAG,GAAI,GAAEA,GAAI,qBAAoBD,eAAgB,EAAjD;AACH,OARY,CAUb;;;AACAV,MAAAA,KAAK,CAACW,GAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAD/B,EACqC;AADrC,OAEKF,IAFL,CAEUG,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,WAAb,EAA0B;AACtB,iBAAOV,QAAQ,CAACW,KAAT,CAAeF,QAAQ,CAACC,WAAxB,CAAP;AACH;;AAEDV,QAAAA,QAAQ,CAACY,IAAT,CAAcH,QAAQ,CAACI,OAAvB,EALc,CAKmB;;AACjCb,QAAAA,QAAQ,CAACc,IAAT,GANc,CAMG;AACpB,OATL;AAUH;;AAtBE,GAAP;AAwBH,CAzBD","sourcesContent":["'use strict';\nconst axios = require('axios');\n/**\n * you can pass an options object into your source when instantiating the factory\n * these can then be used in your code by access `options.propName`\n */\nmodule.exports = (options = {}) => {\n    return {\n        source(pipeline) { //source factories must return an object with a function called 'source'\n            const props = pipeline.config.scene.options, //get control properties\n                { challengeRating } = props; // get the values you need from control props\n\n            let url = `https://www.dnd5eapi.co/api/monsters`;\n\n            if (challengeRating > 0) {\n                url = `${url}?challenge_rating=${challengeRating}`;\n            }\n\n            //pull your source data from a URL\n            axios(url)\n                .then(response => response.data) //get the json data from the api endpoint\n                .then(jsonData => {\n                    if (jsonData.Information) {\n                        return pipeline.error(jsonData.Information);\n                    }\n\n                    pipeline.push(jsonData.results); //send the data down the pipeline\n                    pipeline.done(); //tell the pipeline that you have no further data to send\n                });\n        }\n    };\n};\n"]}]}