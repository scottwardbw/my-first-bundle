{"remainingRequest":"/Users/scott.ward/.npm/_npx/29758/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/scott.ward/Documents/GitHub/my-first-bundle/src/browser.js","dependencies":[{"path":"/Users/scott.ward/Documents/GitHub/my-first-bundle/src/browser.js","mtime":1630411519159},{"path":"/Users/scott.ward/.npm/_npx/29758/lib/node_modules/@vizia/app-emulator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/scott.ward/.npm/_npx/29758/lib/node_modules/@vizia/app-emulator/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwovKioKICogVGhpcyBpcyB3aGVyZSB0byBpbmNsdWRlIGFueSBzb3VyY2Ugb3IgbGlicmFyaWVzIHRoYXQgdXNlIGJyb3dzZXIgQVBJcy4KICovCgpjb25zdCBjcmVhdGVCdW5kbGUgPSByZXF1aXJlKCcuL2xpYi9jcmVhdGUtYnVuZGxlJyk7Cgpjb25zdCBkZXN0aW5hdGlvbkNvbmZpZyA9IHJlcXVpcmUoJy4vbGliL2Rlc3RpbmF0aW9uLWNvbmZpZycpOwoKZnVuY3Rpb24gY3JlYXRlRGVzdGluYXRpb24ob3B0aW9ucykgewogIC8vIFRPRE86IFJlcXVpcmUgeW91ciBkZXN0aW5hdGlvbiBmYWN0b3J5IGFuZCByZXBsYWNlIHRoaXMKICByZXR1cm4gewogICAgZGVzdGluYXRpb24oZGF0YSwgcGlwZWxpbmUpIHsKICAgICAgY29uc3QgewogICAgICAgIGNvbG9yCiAgICAgIH0gPSBvcHRpb25zOyAvL3lvdSBzaG91bGQgcmVtb3ZlIHRoaXMgYW5kIGRvIHNvbWV0aGluZyB3aXRoIHRoZSBkYXRhCgogICAgICBjb25zb2xlLmxvZygnRGF0YSBGcm9tIFNvdXJjZScsIGRhdGEpOyAvL2VzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQoKICAgICAgbGV0IGh0bWxTdHJpbmcgPSBgYDsKCiAgICAgIGlmIChkYXRhLmxlbmd0aCA+IDApIHsKICAgICAgICBkYXRhLmZvckVhY2goZCA9PiB7CiAgICAgICAgICBodG1sU3RyaW5nICs9IGAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InBhZGRpbmc6IDVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImNvbG9yOiAke2QuYWxpZ25tZW50LmluY2x1ZGVzKGBldmlsYCkgPyBgcmVkYCA6IGQuYWxpZ25tZW50LmluY2x1ZGVzKGBnb29kYCkgPyBgZ3JlZW5gIDogYGB9OyI+JHtkLm5hbWV9PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgYDsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBodG1sU3RyaW5nICs9IGA8ZGl2IHN0eWxlPSJwYWRkaW5nOiA1cHg7Ij48ZGl2Pk5vIHJlc3VsdHMuPC9kaXY+PC9kaXY+YDsKICAgICAgfQoKICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihwaXBlbGluZS5jb25maWcuZGVzdFRhcmdldCkuaW5uZXJIVE1MID0gaHRtbFN0cmluZzsKICAgICAgcGlwZWxpbmUuZG9uZSgpOwogICAgfQoKICB9Owp9Cgpjb25zdCBidW5kbGUgPSBjcmVhdGVCdW5kbGUoY3JlYXRlRGVzdGluYXRpb24oZGVzdGluYXRpb25Db25maWcpKTsKbW9kdWxlLmV4cG9ydHMgPSBidW5kbGU7"},{"version":3,"sources":["/Users/scott.ward/Documents/GitHub/my-first-bundle/src/browser.js"],"names":["createBundle","require","destinationConfig","createDestination","options","destination","data","pipeline","color","console","log","htmlString","length","forEach","d","alignment","includes","name","document","querySelector","config","destTarget","innerHTML","done","bundle","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;;AACA,MAAMA,YAAY,GAAGC,OAAO,CAAC,qBAAD,CAA5B;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,0BAAD,CAAjC;;AAEA,SAASE,iBAAT,CAA2BC,OAA3B,EAAoC;AAAE;AAClC,SAAO;AACHC,IAAAA,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAYJ,OAAlB,CADwB,CAExB;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,IAAhC,EAHwB,CAGe;;AAEvC,UAAIK,UAAU,GAAI,EAAlB;;AAEA,UAAIL,IAAI,CAACM,MAAL,GAAc,CAAlB,EAAqB;AACjBN,QAAAA,IAAI,CAACO,OAAL,CAAaC,CAAC,IAAI;AACdH,UAAAA,UAAU,IAAK;AACnC;AACA,qDAAqDG,CAAC,CAACC,SAAF,CAAYC,QAAZ,CAAsB,MAAtB,IAAgC,KAAhC,GAAuCF,CAAC,CAACC,SAAF,CAAYC,QAAZ,CAAsB,MAAtB,IAAgC,OAAhC,GAA0C,EAAE,MAAKF,CAAC,CAACG,IAAK;AACpJ;AACA,yBAJoB;AAKH,SAND;AAOH,OARD,MASK;AACDN,QAAAA,UAAU,IAAK,yDAAf;AACH;;AAEDO,MAAAA,QAAQ,CAACC,aAAT,CAAuBZ,QAAQ,CAACa,MAAT,CAAgBC,UAAvC,EAAmDC,SAAnD,GAA+DX,UAA/D;AAEAJ,MAAAA,QAAQ,CAACgB,IAAT;AACH;;AAxBE,GAAP;AA0BH;;AAED,MAAMC,MAAM,GAAGxB,YAAY,CAACG,iBAAiB,CAACD,iBAAD,CAAlB,CAA3B;AAEAuB,MAAM,CAACC,OAAP,GAAiBF,MAAjB","sourcesContent":["'use strict';\n/**\n * This is where to include any source or libraries that use browser APIs.\n */\nconst createBundle = require('./lib/create-bundle');\nconst destinationConfig = require('./lib/destination-config');\n\nfunction createDestination(options) { // TODO: Require your destination factory and replace this\n    return {\n        destination(data, pipeline) {\n            const { color } = options;\n            //you should remove this and do something with the data\n            console.log('Data From Source', data); //eslint-disable-line no-console\n\n            let htmlString = ``;\n\n            if (data.length > 0) {\n                data.forEach(d => {\n                    htmlString += `\n                            <div style=\"padding: 5px;\">\n                                <div style=\"color: ${d.alignment.includes(`evil`) ? `red` : d.alignment.includes(`good`) ? `green` : ``};\">${d.name}</div>\n                            </div>\n                        `;\n                });\n            }\n            else {\n                htmlString += `<div style=\"padding: 5px;\"><div>No results.</div></div>`\n            }\n\n            document.querySelector(pipeline.config.destTarget).innerHTML = htmlString;\n\n            pipeline.done();\n        }\n    };\n}\n\nconst bundle = createBundle(createDestination(destinationConfig));\n\nmodule.exports = bundle;\n"]}]}